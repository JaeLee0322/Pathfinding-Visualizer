[{"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\index.js":"1","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\App.js":"2","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\gridView.jsx":"3","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appMenu.jsx":"4","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\navigation.jsx":"5","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appSetting.jsx":"6","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appGuide.jsx":"7","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\windowSizeStore.jsx":"8","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\squareView.jsx":"9","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\mouseEventStore.jsx":"10","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\node.jsx":"11","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\gridStore.jsx":"12","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\animationStore.jsx":"13","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\algorithms\\bfs.jsx":"14","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\algorithms\\dfs.jsx":"15","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\mazeAlgorithms\\randomMaze.jsx":"16","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\index.js":"17","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\App.js":"18","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\navigation.jsx":"19","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appSetting.jsx":"20","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appMenu.jsx":"21","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\gridView.jsx":"22","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appGuide.jsx":"23","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\mouseEventStore.jsx":"24","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\animationStore.jsx":"25","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\windowSizeStore.jsx":"26","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\gridStore.jsx":"27","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\squareView.jsx":"28","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\node.jsx":"29","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\algorithms\\bfs.jsx":"30","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\algorithms\\dfs.jsx":"31","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\mazeAlgorithms\\randomMaze.jsx":"32"},{"size":1299,"mtime":1665965611633,"results":"33","hashOfConfig":"34"},{"size":674,"mtime":1665378513398,"results":"35","hashOfConfig":"34"},{"size":686,"mtime":1665409705578,"results":"36","hashOfConfig":"34"},{"size":1221,"mtime":1665968930280,"results":"37","hashOfConfig":"34"},{"size":1722,"mtime":1665450119427,"results":"38","hashOfConfig":"34"},{"size":2525,"mtime":1665972447286,"results":"39","hashOfConfig":"34"},{"size":1172,"mtime":1665449732440,"results":"40","hashOfConfig":"34"},{"size":595,"mtime":1665386557494,"results":"41","hashOfConfig":"34"},{"size":610,"mtime":1665409757014,"results":"42","hashOfConfig":"34"},{"size":1346,"mtime":1665954847552,"results":"43","hashOfConfig":"34"},{"size":1318,"mtime":1665414545471,"results":"44","hashOfConfig":"34"},{"size":3468,"mtime":1665972337330,"results":"45","hashOfConfig":"34"},{"size":4611,"mtime":1665969043104,"results":"46","hashOfConfig":"34"},{"size":1882,"mtime":1665420863000,"results":"47","hashOfConfig":"34"},{"size":1908,"mtime":1665955720801,"results":"48","hashOfConfig":"34"},{"size":534,"mtime":1665972311163,"results":"49","hashOfConfig":"34"},{"size":1299,"mtime":1665975169264,"results":"50","hashOfConfig":"51"},{"size":674,"mtime":1665378513398,"results":"52","hashOfConfig":"51"},{"size":1722,"mtime":1665450119427,"results":"53","hashOfConfig":"51"},{"size":2525,"mtime":1665972447286,"results":"54","hashOfConfig":"51"},{"size":1221,"mtime":1665968930280,"results":"55","hashOfConfig":"51"},{"size":686,"mtime":1665409705578,"results":"56","hashOfConfig":"51"},{"size":1172,"mtime":1665449732440,"results":"57","hashOfConfig":"51"},{"size":1346,"mtime":1665954847552,"results":"58","hashOfConfig":"51"},{"size":4611,"mtime":1665969043104,"results":"59","hashOfConfig":"51"},{"size":595,"mtime":1665386557494,"results":"60","hashOfConfig":"51"},{"size":3468,"mtime":1665972337330,"results":"61","hashOfConfig":"51"},{"size":610,"mtime":1665409757014,"results":"62","hashOfConfig":"51"},{"size":1318,"mtime":1665414545471,"results":"63","hashOfConfig":"51"},{"size":1882,"mtime":1665420863000,"results":"64","hashOfConfig":"51"},{"size":1908,"mtime":1665955720801,"results":"65","hashOfConfig":"51"},{"size":534,"mtime":1665972311163,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5intda",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"1wzemty",{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\index.js",["171","172","173"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\App.js",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\gridView.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appMenu.jsx",["174"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\navigation.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appSetting.jsx",["175","176"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\appGuide.jsx",["177","178"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\windowSizeStore.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\squareView.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\mouseEventStore.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\components\\node.jsx",["179","180"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\gridStore.jsx",["181","182","183","184","185","186"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\stores\\animationStore.jsx",["187"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\algorithms\\bfs.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\algorithms\\dfs.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\pathfinder\\src\\mazeAlgorithms\\randomMaze.jsx",["188","189","190"],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\index.js",["191","192","193"],[],"import React from 'react';\r\nimport { App } from './App'\r\nimport Navigation from './components/navigation'\r\nimport { AnimationStore } from './stores/animationStore';\r\nimport AppMenu from './components/appMenu'\r\nimport AppSetting from './components/appSetting';\r\nimport AppGuide from './components/appGuide';\r\nimport { MouseEventStore } from './stores/mouseEventStore';\r\nimport { render } from \"react-dom\"\r\nimport GridStore from './stores/gridStore';\r\nimport GridView from './components/gridView';\r\nimport ProgressBar from 'react-bootstrap/esm/ProgressBar';\r\nimport { WindowSizeStore } from './stores/windowSizeStore';\r\nimport './index.css';\r\n\r\nconst mouseEvents = new MouseEventStore();\r\nconst grid = new GridStore(99, 48);\r\nconst animation = new AnimationStore(48, 99);\r\n\r\nrender(\r\n    <div>\r\n        <Navigation />\r\n        <AppGuide />\r\n        <AppSetting grid={grid} animation={animation} />\r\n        <GridView grid={grid} mouseEvents={mouseEvents} />\r\n        <AppMenu grid={grid} animation={animation} />\r\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css\" integrity=\"sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor\" crossorigin=\"anonymous\" />\r\n    </div>\r\n\r\n\r\n\r\n    , document.getElementById(\"root\"));\r\n","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\App.js",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\navigation.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appSetting.jsx",["194","195"],[],"import React from 'react'\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst AppSetting = observer(({ grid, animation }) => {\r\n    return (\r\n        <Navbar className='app-setting'>\r\n            <Container>\r\n                <NavDropdown title={'Algorithm: ' + animation.currentAlgorithm} onSelect={algo => { animation.setAlgorithm(algo) }}>\r\n                    <NavDropdown.Item>A* Search</NavDropdown.Item>\r\n                    <NavDropdown.Item>Bidirectional Swarm Algorithm</NavDropdown.Item>\r\n                    <NavDropdown.Item eventKey={\"Breadth First Search\"}>Breadth First Search</NavDropdown.Item>\r\n                    <NavDropdown.Item>Convergent Swarm Algorithm</NavDropdown.Item>\r\n                    <NavDropdown.Item eventKey={\"Depth First Search\"}>Depth First Search</NavDropdown.Item>\r\n                    <NavDropdown.Item>Dijkstra</NavDropdown.Item>\r\n                    <NavDropdown.Item>Greedy Best-first Search</NavDropdown.Item>\r\n                    <NavDropdown.Item>Swarm Algorithm</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title='Mazes & Patterns' onSelect={() => { grid.changeMaze() }}>\r\n                    <NavDropdown.Item eventKey={\"Random\"}>Basic Random Maze</NavDropdown.Item>\r\n                    <NavDropdown.Item>Basic Weighted Maze</NavDropdown.Item>\r\n                    <NavDropdown.Item>Recursive Division</NavDropdown.Item>\r\n                    <NavDropdown.Item>Recursive Division (vertical skew)</NavDropdown.Item>\r\n                    <NavDropdown.Item>Recursive Division (horizontal skew)</NavDropdown.Item>\r\n                    <NavDropdown.Item>Simple Stair Pattern</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <NavDropdown title={'Speed: ' + (animation.speedMulti * 1.5) + '%'} onSelect={multi => { animation.setAnimationDuration(multi) }}>\r\n                    <NavDropdown.Item eventKey={2.0}>2.0</NavDropdown.Item>\r\n                    <NavDropdown.Item eventKey={1.5}>1.5</NavDropdown.Item>\r\n                    <NavDropdown.Item eventKey={1.0}>1.0</NavDropdown.Item>\r\n                    <NavDropdown.Item eventKey={0.5}>0.5</NavDropdown.Item>\r\n                </NavDropdown>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n})\r\n\r\nexport default AppSetting","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appMenu.jsx",["196"],[],"import React from 'react'\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Form from 'react-bootstrap/Form' \r\n\r\nconst AppMenu = observer(({ grid, animation }) => {\r\n    return (\r\n        <Navbar className='app-menu'>\r\n            <Container>\r\n                <Button onClick={() => {animation.getShortestPath(grid)}}>Visualize</Button>\r\n                <ButtonGroup>\r\n                    <Button onClick={() => {grid.setDrawingMode(1)}}>Pencil</Button>\r\n                    <Button onClick={() => {grid.setDrawingMode(0)}}>Eraser</Button>\r\n                    <Button onClick={() => {grid.setDrawingMode(2)}}>Start Node</Button>\r\n                    <Button onClick={() => {grid.setDrawingMode(3)}}>Target Node</Button>\r\n                </ButtonGroup>\r\n                <Button variant=\"danger\" onClick={() => {grid.clearGrid()}}>Clear</Button>\r\n                <Button variant=\"danger\" onClick={() => {animation.setPause()}}>Pause</Button>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n})\r\n\r\nexport default AppMenu","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\gridView.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\appGuide.jsx",["197","198"],[],"import React from 'react'\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst AppGuide = observer(() => {\r\n    const style = {\r\n        border: '2px solid lightgrey',\r\n        height: 'calc((1 / 60) * 100vh)',\r\n    };\r\n\r\n    return (\r\n        <Navbar className='app-guide'>\r\n            <Container>\r\n                <Navbar.Text><div className='node-start' style={style}/> Start Node</Navbar.Text>\r\n                <Navbar.Text><div className='node-end' style={style}/> Target Node</Navbar.Text>\r\n                <Navbar.Text><div className='node' style={style}/> Unvisited Node</Navbar.Text>\r\n                <Navbar.Text><div className='node-visited' style={style}/> Visited Node</Navbar.Text>\r\n                <Navbar.Text><div className='node-shortest-path' style={style}/> Shortest-path Node</Navbar.Text>\r\n                <Navbar.Text><div className='node-wall' style={style}/> Wall Node</Navbar.Text>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n})\r\n\r\nexport default AppGuide","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\mouseEventStore.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\animationStore.jsx",["199"],[],"import { makeAutoObservable, observable, action, computed } from \"mobx\"\r\nimport { bfs } from \"../algorithms/bfs\";\r\nimport { dfs } from \"../algorithms/dfs\";\r\n\r\nexport class AnimationStore {\r\n    algorithm = '';\r\n    height = 0;\r\n    isPaused = false;\r\n    isRunning = false;\r\n    speedMulti = 1;\r\n    width = 0;\r\n\r\n    constructor(height, width) {\r\n        makeAutoObservable(this, {\r\n            algorithm: observable,\r\n            height: observable,\r\n            isPaused: observable,\r\n            isRunning: observable,\r\n            speedMulti: observable,\r\n            width: observable,\r\n            currentAlgorithm: computed,\r\n            getShortestPath: action,\r\n            setAlgorithm: action,\r\n            setAnimationDuration: action,\r\n        });\r\n        this.speedMulti = 1;\r\n        this.height = height;\r\n        this.width = width;\r\n    }\r\n\r\n    get currentAlgorithm() {\r\n        return this.algorithm;\r\n    }\r\n\r\n    toggleAnimation() {\r\n        this.isRunning = !this.isRunning;\r\n    }\r\n\r\n    setAlgorithm(algorithm) {\r\n        this.algorithm = algorithm;\r\n    }\r\n\r\n    setAnimationDuration(duration) {\r\n        document.documentElement.style.setProperty('--animation-duration', duration + 's');\r\n        this.speedMulti = duration / 1.5;\r\n    }\r\n\r\n    setPause() {\r\n        this.isPaused = !this.isPaused;\r\n        this.isPaused ? document.documentElement.style.setProperty('--test', 'paused') : document.documentElement.style.setProperty('--test', 'running');\r\n    }\r\n\r\n    getShortestPath(grid) {\r\n        if (!this.isRunning) {\r\n            this.clearResults(grid);\r\n            this.toggleAnimation();\r\n            const startNode = grid.findNode(grid.startNode.y, grid.startNode.x);\r\n            const endNode = grid.findNode(grid.endNode.y, grid.endNode.x);\r\n            let visitedNodesInOrder;\r\n            switch (this.algorithm) {\r\n                case \"Breadth First Search\":\r\n                    visitedNodesInOrder = bfs(grid, this.height, this.width);\r\n                    break;\r\n                case \"Depth First Search\":\r\n                    visitedNodesInOrder = dfs(grid, this.height, this.width);\r\n                    break;\r\n                default:\r\n                    // should never go here\r\n                    break;\r\n            }\r\n            const nodesInShortestPathOrder = getNodesInShortestPathOrder(endNode);\r\n            nodesInShortestPathOrder.push('end');\r\n            this.animate(visitedNodesInOrder, nodesInShortestPathOrder);\r\n        }\r\n    }\r\n\r\n    animate(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n            if (i === visitedNodesInOrder.length) {\r\n                setTimeout(() => {\r\n                    this.animateShortestPath(nodesInShortestPathOrder);\r\n                }, 10 * i * this.speedMulti);\r\n                return;\r\n            }\r\n            setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const nodeClassName = document.getElementById('node-' + node.col + '-' + node.row).className;\r\n                if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\r\n                    document.getElementById('node-' + node.col + '-' + node.row).className = 'node-visited';\r\n                }\r\n            }, 10 * i * this.speedMulti);\r\n        }\r\n\r\n    }\r\n\r\n    animateShortestPath(nodesInShortestPathOrder) {\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n            if (nodesInShortestPathOrder[i] === 'end') {\r\n                setTimeout(() => {\r\n                    this.toggleAnimation();\r\n                }, i * 50 * this.speedMulti);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const node = nodesInShortestPathOrder[i];\r\n                    const nodeClassName = document.getElementById('node-' + node.col + '-' + node.row).className;\r\n                    if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\r\n                        document.getElementById('node-' + node.col + '-' + node.row).className = 'node-shortest-path';\r\n                    }\r\n                }, i * 40 * this.speedMulti);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearResults(grid) {\r\n        grid.clearResults();\r\n    }\r\n\r\n}\r\n\r\nfunction getNodesInShortestPathOrder(finishNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let currentNode = finishNode;\r\n    while (currentNode !== null) {\r\n        nodesInShortestPathOrder.unshift(currentNode);\r\n        currentNode = currentNode.previousNode;\r\n    }\r\n    return nodesInShortestPathOrder;\r\n}","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\windowSizeStore.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\stores\\gridStore.jsx",["200","201","202","203","204","205"],[],"import { action, computed, makeAutoObservable, observable } from 'mobx';\r\nimport { Node } from '../components/node';\r\nimport { randomMaze } from '../mazeAlgorithms/randomMaze';\r\n\r\nexport class GridStore {\r\n    squares = [];\r\n    drawingMode = 0;  // 0: empty, 1: wall, 2: start, 3: end, 4: isVisited, 5: Shortest-Path\r\n    startNode = {\r\n        x: 10,\r\n        y: 10\r\n    }\r\n    endNode = {\r\n        x: 80,\r\n        y: 35\r\n    }\r\n\r\n    constructor(width, height) {\r\n        makeAutoObservable(this, {\r\n            squares: observable,\r\n            drawingMode: observable,\r\n            startNode: observable.struct,\r\n            endNode: observable.struct,\r\n            initiateGrid: action,\r\n            findNode: action,\r\n            changeGrid: action,\r\n            clearGrid: action,\r\n            setDrawingMode: action,\r\n            changeMaze: action\r\n        });\r\n        this.setDrawingMode(1);\r\n        this.initiateGrid(width, height);\r\n    }\r\n\r\n    initiateGrid(width, height) {\r\n        const grid = []\r\n        for (let i = 0; i < height; i++) {\r\n            grid.push([])\r\n            for (let j = 0; j < width; j++) {\r\n                if (i == this.startNode.y && j == this.startNode.x) grid[i].push(new Node(j, i, 2));\r\n                else if (i == this.endNode.y && j == this.endNode.x) grid[i].push(new Node(j, i, 3));\r\n                else grid[i].push(new Node(j, i));\r\n            }\r\n        }\r\n        this.squares = grid;\r\n    }\r\n\r\n    findNode(x, y) {\r\n        return this.squares[x][y];\r\n    }\r\n\r\n    changeGrid(node, mode) {\r\n        switch (mode) {\r\n            case 0:\r\n                if (node.nodeType !== 2 && node.nodeType !== 3) node.changeType(0);\r\n                return;\r\n            case 1:\r\n                if (node.nodeType !== 2 && node.nodeType !== 3) node.changeType(1);\r\n                return;\r\n            case 2:\r\n                node.changeType(2);\r\n                break;\r\n            case 3:\r\n                node.changeType(3);\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearGrid() {\r\n        for (let row = 0; row < this.squares.length; row++) {\r\n            for (let col = 0; col < this.squares[row].length; col++) {\r\n                if (this.squares[row][col].nodeType !== 2 && this.squares[row][col].nodeType !== 3) this.squares[row][col].resetType();\r\n                const nodeClassName = document.getElementById('node-'+col+'-'+row).className;\r\n                if (nodeClassName === 'node-visited' || nodeClassName === 'node-shortest-path') {\r\n                    document.getElementById('node-'+col+'-'+row).className = 'node';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clearResults() {\r\n        for (let row = 0; row < this.squares.length; row++) {\r\n            for (let col = 0; col < this.squares[row].length; col++) {\r\n                const node = this.squares[row][col];\r\n                node.isVisited = false;\r\n                node.previousNode = null;\r\n                const nodeClassName = document.getElementById('node-'+col+'-'+row).className;\r\n                if (nodeClassName === 'node-visited' || nodeClassName === 'node-shortest-path') {\r\n                    document.getElementById('node-'+col+'-'+row).className = 'node';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setDrawingMode(mode) {\r\n        this.drawingMode = mode;\r\n    }\r\n\r\n    changeMaze() {\r\n        this.clearGrid();\r\n        randomMaze(this.squares);\r\n    }\r\n}\r\n\r\nexport default GridStore","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\squareView.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\components\\node.jsx",["206","207"],[],"import { makeObservable, observable, action, computed } from \"mobx\"\r\n\r\nexport class Node {\r\n    col = 0;\r\n    isVisited = false;\r\n    previousNode = null;\r\n    type = 0;\r\n    row = 0;\r\n\r\n    constructor(x, y, type = 0) {\r\n        makeObservable(this, {\r\n            col: observable,\r\n            isVisited: observable,\r\n            previousNode: observable,\r\n            type: observable,\r\n            row: observable,\r\n            nodeType: computed,\r\n            changeType: action,\r\n            resetType: action\r\n        })\r\n        this.col = x;\r\n        this.type = type;\r\n        this.row = y;\r\n    }\r\n\r\n    get nodeType() {\r\n        return this.type;\r\n    }\r\n\r\n    get nodeId() {\r\n        switch (this.type) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return '-wall';\r\n            case 2:\r\n                return '-start';\r\n            case 3:\r\n                return '-end';\r\n        }\r\n    }\r\n\r\n    changeType(type) {\r\n        this.type = type;\r\n    }\r\n\r\n    resetType() {\r\n        this.type = 0;\r\n    }\r\n}\r\n\r\n/*export default function createSquare(type = 0) {\r\n    return makeAutoObservable({\r\n        type,\r\n        get getType() {\r\n            return this.type;\r\n        },\r\n        set changeType(type) {\r\n            this.type = type;\r\n        }\r\n    })\r\n}*/","C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\algorithms\\bfs.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\algorithms\\dfs.jsx",[],[],"C:\\Users\\jaewh\\OneDrive\\Desktop\\Resume\\Pathfinding-Visualizer\\src\\mazeAlgorithms\\randomMaze.jsx",["208","209","210"],[],"export function randomMaze(grid) {\r\n    for (let row = 0; row < grid.length; row++) {\r\n        for (let col = 0; col < grid[row].length; col++) {\r\n            const node = grid[row][col];\r\n            if (node.type != 2 && node.type != 3 && getRandomInt(0,3) == 1) {\r\n                node.type = getRandomInt(0, 2);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default randomMaze",{"ruleId":"211","severity":1,"message":"212","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":19},{"ruleId":"211","severity":1,"message":"216","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":25},{"ruleId":"211","severity":1,"message":"217","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":12},{"ruleId":"211","severity":1,"message":"218","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"219","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"220","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":11},{"ruleId":"211","severity":1,"message":"219","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":14},{"ruleId":"221","severity":1,"message":"222","line":30,"column":5,"nodeType":"223","messageId":"224","endLine":30,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":31,"column":9,"nodeType":"227","messageId":"228","endLine":40,"endColumn":10},{"ruleId":"211","severity":1,"message":"229","line":1,"column":18,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":39,"column":23,"nodeType":"232","messageId":"233","endLine":39,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":39,"column":48,"nodeType":"232","messageId":"233","endLine":39,"endColumn":50},{"ruleId":"230","severity":1,"message":"231","line":40,"column":28,"nodeType":"232","messageId":"233","endLine":40,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":40,"column":51,"nodeType":"232","messageId":"233","endLine":40,"endColumn":53},{"ruleId":"225","severity":1,"message":"226","line":52,"column":9,"nodeType":"227","messageId":"228","endLine":65,"endColumn":10},{"ruleId":"211","severity":1,"message":"234","line":57,"column":19,"nodeType":"213","messageId":"214","endLine":57,"endColumn":28},{"ruleId":"230","severity":1,"message":"235","line":5,"column":27,"nodeType":"232","messageId":"233","endLine":5,"endColumn":29},{"ruleId":"230","severity":1,"message":"235","line":5,"column":45,"nodeType":"232","messageId":"233","endLine":5,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":5,"column":71,"nodeType":"232","messageId":"233","endLine":5,"endColumn":73},{"ruleId":"211","severity":1,"message":"212","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":19},{"ruleId":"211","severity":1,"message":"216","line":13,"column":10,"nodeType":"213","messageId":"214","endLine":13,"endColumn":25},{"ruleId":"211","severity":1,"message":"218","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"219","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"217","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":12},{"ruleId":"211","severity":1,"message":"220","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":11},{"ruleId":"211","severity":1,"message":"219","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":14},{"ruleId":"211","severity":1,"message":"234","line":57,"column":19,"nodeType":"213","messageId":"214","endLine":57,"endColumn":28},{"ruleId":"211","severity":1,"message":"229","line":1,"column":18,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":39,"column":23,"nodeType":"232","messageId":"233","endLine":39,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":39,"column":48,"nodeType":"232","messageId":"233","endLine":39,"endColumn":50},{"ruleId":"230","severity":1,"message":"231","line":40,"column":28,"nodeType":"232","messageId":"233","endLine":40,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":40,"column":51,"nodeType":"232","messageId":"233","endLine":40,"endColumn":53},{"ruleId":"225","severity":1,"message":"226","line":52,"column":9,"nodeType":"227","messageId":"228","endLine":65,"endColumn":10},{"ruleId":"221","severity":1,"message":"222","line":30,"column":5,"nodeType":"223","messageId":"224","endLine":30,"endColumn":15},{"ruleId":"225","severity":1,"message":"226","line":31,"column":9,"nodeType":"227","messageId":"228","endLine":40,"endColumn":10},{"ruleId":"230","severity":1,"message":"235","line":5,"column":27,"nodeType":"232","messageId":"233","endLine":5,"endColumn":29},{"ruleId":"230","severity":1,"message":"235","line":5,"column":45,"nodeType":"232","messageId":"233","endLine":5,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":5,"column":71,"nodeType":"232","messageId":"233","endLine":5,"endColumn":73},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'ProgressBar' is defined but never used.","'WindowSizeStore' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.","getter-return","Expected getter 'nodeId' to always return a value.","FunctionExpression","expectedAlways","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'computed' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'startNode' is assigned a value but never used.","Expected '!==' and instead saw '!='."]