{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewh\\\\OneDrive\\\\Desktop\\\\Resume\\\\pathfinder\\\\src\\\\components\\\\gridView.jsx\";\nimport { observer } from \"mobx-react-lite\";\nimport '../stores/grid';\nimport Square from \"./square\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridView = observer(_c = _ref => {\n  let {\n    grid\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-grid\",\n    children: grid.squares.map(row => row.map(col => /*#__PURE__*/_jsxDEV(Square, {\n      square: col\n    }, col.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n  /*<div className=\"app-grid\">\r\n      <ButtonGroup vertical>\r\n          {grid.squares.map(row => (\r\n              <ButtonGroup>\r\n                  {row.map(col => (\r\n                      <Square square={col} key={col.id} />\r\n                  ))}\r\n              </ButtonGroup>\r\n          ))}\r\n      </ButtonGroup>\r\n  </div>*/\n\n  /*<table>\r\n      <tbody>\r\n          {grid.squares.map(row => {\r\n              return (\r\n                  <tr>\r\n                      {row.squares.map(col => {\r\n                          const {type, id} = col;\r\n                          return (\r\n                              <Square square={type} key={id}></Square>\r\n                          )\r\n                      })}\r\n                  </tr>\r\n              )\r\n          })}\r\n      </tbody>\r\n  </table>*/\n  ;\n});\n_c2 = GridView;\nexport default GridView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GridView$observer\");\n$RefreshReg$(_c2, \"GridView\");","map":{"version":3,"names":["observer","Square","ButtonGroup","GridView","grid","squares","map","row","col","id"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/components/gridView.jsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\r\nimport '../stores/grid'\r\nimport Square from \"./square\"\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nimport '../index.css'\r\n\r\nconst GridView = observer(({ grid }) => (\r\n    <div className=\"app-grid\">\r\n        {grid.squares.map(row => row.map(col => (\r\n            <Square square={col} key={col.id} />\r\n        )))}\r\n    </div>\r\n\r\n    /*<div className=\"app-grid\">\r\n        <ButtonGroup vertical>\r\n            {grid.squares.map(row => (\r\n                <ButtonGroup>\r\n                    {row.map(col => (\r\n                        <Square square={col} key={col.id} />\r\n                    ))}\r\n                </ButtonGroup>\r\n            ))}\r\n        </ButtonGroup>\r\n    </div>*/\r\n\r\n    /*<table>\r\n        <tbody>\r\n            {grid.squares.map(row => {\r\n                return (\r\n                    <tr>\r\n                        {row.squares.map(col => {\r\n                            const {type, id} = col;\r\n                            return (\r\n                                <Square square={type} key={id}></Square>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                )\r\n            })}\r\n        </tbody>\r\n    </table>*/\r\n))\r\n\r\nexport default GridView"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAGH,QAAQ,MAAC;EAAA,IAAC;IAAEI;EAAF,CAAD;EAAA,oBACtB;IAAK,SAAS,EAAC,UAAf;IAAA,UACKA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQE,GAAG,iBAChC,QAAC,MAAD;MAAQ,MAAM,EAAEA;IAAhB,GAA0BA,GAAG,CAACC,EAA9B;MAAA;MAAA;MAAA;IAAA,QADqB,CAAxB;EADL;IAAA;IAAA;IAAA;EAAA;EAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlC0B;AAAA,CAAD,CAAzB;MAAMN,Q;AAqCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}