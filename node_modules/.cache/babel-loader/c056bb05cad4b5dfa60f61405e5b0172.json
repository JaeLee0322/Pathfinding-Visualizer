{"ast":null,"code":"export function randomMaze(grid){for(var row=0;row<grid.length;row++){for(var col=0;col<grid[row].length;col++){var node=grid[row][col];if(node.type!=2&&node.type!=3&&getRandomInt(0,3)==1){node.type=getRandomInt(0,2);}}}}function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min)+min);}export default randomMaze;","map":{"version":3,"names":["randomMaze","grid","row","length","col","node","type","getRandomInt","min","max","Math","ceil","floor","random"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/Pathfinding-Visualizer/src/mazeAlgorithms/randomMaze.jsx"],"sourcesContent":["export function randomMaze(grid) {\r\n    for (let row = 0; row < grid.length; row++) {\r\n        for (let col = 0; col < grid[row].length; col++) {\r\n            const node = grid[row][col];\r\n            if (node.type != 2 && node.type != 3 && getRandomInt(0,3) == 1) {\r\n                node.type = getRandomInt(0, 2);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default randomMaze"],"mappings":"AAAA,MAAO,SAASA,WAAT,CAAoBC,IAApB,CAA0B,CAC7B,IAAK,GAAIC,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGD,IAAI,CAACE,MAA7B,CAAqCD,GAAG,EAAxC,CAA4C,CACxC,IAAK,GAAIE,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGH,IAAI,CAACC,GAAD,CAAJ,CAAUC,MAAlC,CAA0CC,GAAG,EAA7C,CAAiD,CAC7C,GAAMC,KAAI,CAAGJ,IAAI,CAACC,GAAD,CAAJ,CAAUE,GAAV,CAAb,CACA,GAAIC,IAAI,CAACC,IAAL,EAAa,CAAb,EAAkBD,IAAI,CAACC,IAAL,EAAa,CAA/B,EAAoCC,YAAY,CAAC,CAAD,CAAG,CAAH,CAAZ,EAAqB,CAA7D,CAAgE,CAC5DF,IAAI,CAACC,IAAL,CAAYC,YAAY,CAAC,CAAD,CAAI,CAAJ,CAAxB,CACH,CACJ,CACJ,CACJ,CAED,QAASA,aAAT,CAAsBC,GAAtB,CAA2BC,GAA3B,CAAgC,CAC5BD,GAAG,CAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN,CACAC,GAAG,CAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN,CACA,MAAOC,KAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,IAAiBJ,GAAG,CAAGD,GAAvB,EAA8BA,GAAzC,CAAP,CACH,CAED,cAAeR,WAAf"},"metadata":{},"sourceType":"module"}