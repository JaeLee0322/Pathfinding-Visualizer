{"ast":null,"code":"import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { bfs } from \"../algorithms/bfs\";\nimport { dfs } from \"../algorithms/dfs\";\nexport class AnimationStore {\n  constructor(height, width) {\n    this.algorithm = '';\n    this.height = 0;\n    this.isRunning = false;\n    this.speedMulti = 1;\n    this.width = 0;\n    makeAutoObservable(this, {\n      algorithm: observable,\n      height: observable,\n      isRunning: observable,\n      speedMulti: observable,\n      width: observable,\n      currentAlgorithm: computed,\n      getShortestPath: action,\n      setAlgorithm: action,\n      setAnimationDuration: action\n    });\n    this.speedMulti = 1;\n    this.height = height;\n    this.width = width;\n  }\n\n  get currentAlgorithm() {\n    return this.algorithm;\n  }\n\n  toggleAnimation() {\n    this.isRunning = !this.isRunning;\n  }\n\n  setAlgorithm(algorithm) {\n    this.algorithm = algorithm;\n  }\n\n  setAnimationDuration(duration) {\n    document.documentElement.style.setProperty('--animation-duration', duration + 's');\n    this.speedMulti = duration / 1.5;\n  }\n\n  setPause() {\n    document.documentElement.style.setProperty('--test', 'paused');\n  }\n\n  setPause_i() {\n    document.documentElement.style.setProperty('--test', 'running');\n  }\n\n  getShortestPath(grid) {\n    if (!this.isRunning) {\n      this.clearResults(grid);\n      this.toggleAnimation();\n      const startNode = grid.findNode(grid.startNode.y, grid.startNode.x);\n      const endNode = grid.findNode(grid.endNode.y, grid.endNode.x);\n      let visitedNodesInOrder;\n\n      switch (this.algorithm) {\n        case \"Breadth First Search\":\n          visitedNodesInOrder = bfs(grid, this.height, this.width);\n          break;\n\n        case \"Depth First Search\":\n          visitedNodesInOrder = dfs(grid, this.height, this.width);\n          break;\n\n        default:\n          // should never go here\n          break;\n      }\n\n      const nodesInShortestPathOrder = getNodesInShortestPathOrder(endNode);\n      nodesInShortestPathOrder.push('end');\n      this.animate(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n  }\n\n  animate(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i * this.speedMulti);\n        return;\n      }\n\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        const nodeClassName = document.getElementById('node-' + node.col + '-' + node.row).className;\n\n        if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\n          document.getElementById('node-' + node.col + '-' + node.row).className = 'node-visited';\n        }\n      }, 10 * i * this.speedMulti);\n    }\n  }\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      if (nodesInShortestPathOrder[i] === 'end') {\n        setTimeout(() => {\n          this.toggleAnimation();\n        }, i * 50 * this.speedMulti);\n      } else {\n        setTimeout(() => {\n          const node = nodesInShortestPathOrder[i];\n          const nodeClassName = document.getElementById('node-' + node.col + '-' + node.row).className;\n\n          if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\n            document.getElementById('node-' + node.col + '-' + node.row).className = 'node-shortest-path';\n          }\n        }, i * 40 * this.speedMulti);\n      }\n    }\n  }\n\n  clearResults(grid) {\n    grid.clearResults();\n  }\n\n}\n\nfunction getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n\n  return nodesInShortestPathOrder;\n}","map":{"version":3,"names":["makeAutoObservable","observable","action","computed","bfs","dfs","AnimationStore","constructor","height","width","algorithm","isRunning","speedMulti","currentAlgorithm","getShortestPath","setAlgorithm","setAnimationDuration","toggleAnimation","duration","document","documentElement","style","setProperty","setPause","setPause_i","grid","clearResults","startNode","findNode","y","x","endNode","visitedNodesInOrder","nodesInShortestPathOrder","getNodesInShortestPathOrder","push","animate","i","length","setTimeout","animateShortestPath","node","nodeClassName","getElementById","col","row","className","finishNode","currentNode","unshift","previousNode"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/stores/animationStore.jsx"],"sourcesContent":["import { makeAutoObservable, observable, action, computed } from \"mobx\"\r\nimport { bfs } from \"../algorithms/bfs\";\r\nimport { dfs } from \"../algorithms/dfs\";\r\n\r\nexport class AnimationStore {\r\n    algorithm = '';\r\n    height = 0;\r\n    isRunning = false;\r\n    speedMulti = 1;\r\n    width = 0;\r\n\r\n    constructor(height, width) {\r\n        makeAutoObservable(this, {\r\n            algorithm: observable,\r\n            height: observable,\r\n            isRunning: observable,\r\n            speedMulti: observable,\r\n            width: observable,\r\n            currentAlgorithm: computed,\r\n            getShortestPath: action,\r\n            setAlgorithm: action,\r\n            setAnimationDuration: action,\r\n        });\r\n        this.speedMulti = 1;\r\n        this.height = height;\r\n        this.width = width;\r\n    }\r\n\r\n    get currentAlgorithm() {\r\n        return this.algorithm;\r\n    }\r\n\r\n    toggleAnimation() {\r\n        this.isRunning = !this.isRunning;\r\n    }\r\n\r\n    setAlgorithm(algorithm) {\r\n        this.algorithm = algorithm;\r\n    }\r\n\r\n    setAnimationDuration(duration) {\r\n        document.documentElement.style.setProperty('--animation-duration', duration+'s');\r\n        this.speedMulti = duration / 1.5;\r\n    }\r\n\r\n    setPause() {\r\n        document.documentElement.style.setProperty('--test', 'paused');\r\n    }\r\n\r\n    setPause_i() {\r\n        document.documentElement.style.setProperty('--test', 'running');\r\n    }\r\n\r\n    getShortestPath(grid) {\r\n        if (!this.isRunning) {\r\n            this.clearResults(grid);\r\n            this.toggleAnimation();\r\n            const startNode = grid.findNode(grid.startNode.y, grid.startNode.x);\r\n            const endNode = grid.findNode(grid.endNode.y, grid.endNode.x);\r\n            let visitedNodesInOrder;\r\n            switch (this.algorithm) {\r\n                case \"Breadth First Search\":\r\n                    visitedNodesInOrder = bfs(grid, this.height, this.width);\r\n                    break;\r\n                case \"Depth First Search\":\r\n                    visitedNodesInOrder = dfs(grid, this.height, this.width);\r\n                    break;\r\n                default:\r\n                    // should never go here\r\n                    break;\r\n            }\r\n            const nodesInShortestPathOrder = getNodesInShortestPathOrder(endNode);\r\n            nodesInShortestPathOrder.push('end');\r\n            this.animate(visitedNodesInOrder, nodesInShortestPathOrder);\r\n        }\r\n    }\r\n\r\n    animate(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n            if (i === visitedNodesInOrder.length) {\r\n                setTimeout(() => {\r\n                    this.animateShortestPath(nodesInShortestPathOrder);\r\n                }, 10 * i * this.speedMulti);\r\n                return;\r\n            }\r\n            setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const nodeClassName = document.getElementById('node-'+node.col+'-'+node.row).className;\r\n                if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\r\n                    document.getElementById('node-'+node.col+'-'+node.row).className = 'node-visited';\r\n                }\r\n            }, 10 * i * this.speedMulti);\r\n        }\r\n    }\r\n\r\n    animateShortestPath(nodesInShortestPathOrder) {\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n            if (nodesInShortestPathOrder[i] === 'end') {\r\n                setTimeout(() => {\r\n                    this.toggleAnimation();\r\n                }, i * 50 * this.speedMulti);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const node = nodesInShortestPathOrder[i];\r\n                    const nodeClassName = document.getElementById('node-'+node.col+'-'+node.row).className;\r\n                    if (nodeClassName !== 'node-start' && nodeClassName !== 'node-end') {\r\n                        document.getElementById('node-'+node.col+'-'+node.row).className = 'node-shortest-path';\r\n                    }\r\n                }, i * 40 * this.speedMulti);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearResults(grid) {\r\n        grid.clearResults();\r\n    }\r\n\r\n}\r\n\r\nfunction getNodesInShortestPathOrder(finishNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let currentNode = finishNode;\r\n    while (currentNode !== null) {\r\n        nodesInShortestPathOrder.unshift(currentNode);\r\n        currentNode = currentNode.previousNode;\r\n    }\r\n    return nodesInShortestPathOrder;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}