{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewh\\\\OneDrive\\\\Desktop\\\\Resume\\\\pathfinder\\\\src\\\\components\\\\gridView.jsx\";\nimport { observer } from \"mobx-react-lite\";\nimport '../stores/grid';\nimport Square from \"./square\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n/*const TodoListView = observer(({ todoList }) => (\r\n    <div>\r\n        <ul>\r\n            {todoList.todos.map(todo => (\r\n                <TodoView todo={todo} key={todo.id} />\r\n            ))}\r\n        </ul>\r\n        Tasks left: {todoList.unfinishedTodoCount}\r\n    </div>\r\n))*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GridView = observer(_c = _ref => {\n  let {\n    grid\n  } = _ref;\n\n  /*<div className=\"grid\">\r\n      {grid.squares.map(row => row.map(col => (\r\n          <Square square={col} key={col.id} />\r\n      )))}\r\n  </div>*/\n  function makeGrid() {\n    for (let row = 100; row < 100; row++) {\n      //\n      for (let col = 100; col < 100; col++) {\n        return /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    vertical: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n});\n_c2 = GridView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GridView$observer\");\n$RefreshReg$(_c2, \"GridView\");","map":{"version":3,"names":["observer","Square","ButtonGroup","GridView","grid","makeGrid","row","col"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/components/gridView.jsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\r\nimport '../stores/grid'\r\nimport Square from \"./square\"\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\n/*const TodoListView = observer(({ todoList }) => (\r\n    <div>\r\n        <ul>\r\n            {todoList.todos.map(todo => (\r\n                <TodoView todo={todo} key={todo.id} />\r\n            ))}\r\n        </ul>\r\n        Tasks left: {todoList.unfinishedTodoCount}\r\n    </div>\r\n))*/\r\n\r\nexport const GridView = observer(({ grid }) => {\r\n    /*<div className=\"grid\">\r\n        {grid.squares.map(row => row.map(col => (\r\n            <Square square={col} key={col.id} />\r\n        )))}\r\n    </div>*/\r\n    function makeGrid() {\r\n        for (let row = 100; row < 100; row++) {\r\n            //\r\n            for (let col = 100; col < 100; col++) {\r\n                return <Square/>\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup vertical>\r\n\r\n        </ButtonGroup>\r\n    )\r\n})"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,QAAQ,GAAGH,QAAQ,MAAC,QAAc;EAAA,IAAb;IAAEI;EAAF,CAAa;;EAC3C;AACJ;AACA;AACA;AACA;EACI,SAASC,QAAT,GAAoB;IAChB,KAAK,IAAIC,GAAG,GAAG,GAAf,EAAoBA,GAAG,GAAG,GAA1B,EAA+BA,GAAG,EAAlC,EAAsC;MAClC;MACA,KAAK,IAAIC,GAAG,GAAG,GAAf,EAAoBA,GAAG,GAAG,GAA1B,EAA+BA,GAAG,EAAlC,EAAsC;QAClC,oBAAO,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAAP;MACH;IACJ;EACJ;;EAED,oBACI,QAAC,WAAD;IAAa,QAAQ;EAArB;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CApB+B,CAAzB;MAAMJ,Q"},"metadata":{},"sourceType":"module"}