{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewh\\\\OneDrive\\\\Desktop\\\\Resume\\\\pathfinder\\\\src\\\\components\\\\gridView.jsx\";\nimport { observer } from \"mobx-react-lite\";\nimport '../stores/grid';\nimport Square from \"./square\";\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction makeCols() {\n  const cols = [];\n\n  for (let i = 10; i < 10; i++) {\n    cols.push( /*#__PURE__*/_jsxDEV(Square, {\n      square: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 19\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    children: cols\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n}\n\nfunction makeRows() {\n  for (let i = 10; i < 10; i++) {\n    makeCols();\n  }\n}\n\nconst GridView = observer(_c = _ref => {\n  let {\n    grid\n  } = _ref;\n  return (\n    /*#__PURE__*/\n\n    /*<div className=\"grid\">\r\n        {grid.squares.map(row => row.map(col => (\r\n            <Square square={col} key={col.id} />\r\n        )))}\r\n    </div>*/\n    _jsxDEV(ButtonGroup, {\n      vertical: true,\n      children: grid.squares.map(row => /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: row.map(col => /*#__PURE__*/_jsxDEV(Square, {\n          square: col\n        }, col.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n});\n_c2 = GridView;\nexport default GridView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GridView$observer\");\n$RefreshReg$(_c2, \"GridView\");","map":{"version":3,"names":["observer","Square","ButtonGroup","makeCols","cols","i","push","makeRows","GridView","grid","squares","map","row","col","id"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/components/gridView.jsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\r\nimport '../stores/grid'\r\nimport Square from \"./square\"\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\nfunction makeCols() {\r\n    const cols = []\r\n    for (let i = 10; i < 10; i++) {\r\n        cols.push(<Square square={1} />)\r\n    }\r\n    return <ButtonGroup>{cols}</ButtonGroup>\r\n}\r\n\r\nfunction makeRows() {\r\n    for (let i = 10; i < 10; i++) {\r\n        makeCols()\r\n    }\r\n}\r\n\r\nconst GridView = observer(({ grid }) => (\r\n    /*<div className=\"grid\">\r\n        {grid.squares.map(row => row.map(col => (\r\n            <Square square={col} key={col.id} />\r\n        )))}\r\n    </div>*/\r\n    <ButtonGroup vertical>\r\n        {grid.squares.map(row => (\r\n            <ButtonGroup>\r\n                {row.map(col => (\r\n                    <Square square={col} key={col.id} />\r\n                ))}\r\n            </ButtonGroup>\r\n        ))}\r\n    </ButtonGroup>\r\n))\r\n\r\nexport default GridView"],"mappings":";AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;;AAEA,SAASC,QAAT,GAAoB;EAChB,MAAMC,IAAI,GAAG,EAAb;;EACA,KAAK,IAAIC,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;IAC1BD,IAAI,CAACE,IAAL,eAAU,QAAC,MAAD;MAAQ,MAAM,EAAE;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAV;EACH;;EACD,oBAAO,QAAC,WAAD;IAAA,UAAcF;EAAd;IAAA;IAAA;IAAA;EAAA,QAAP;AACH;;AAED,SAASG,QAAT,GAAoB;EAChB,KAAK,IAAIF,CAAC,GAAG,EAAb,EAAiBA,CAAC,GAAG,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;IAC1BF,QAAQ;EACX;AACJ;;AAED,MAAMK,QAAQ,GAAGR,QAAQ,MAAC;EAAA,IAAC;IAAES;EAAF,CAAD;EAAA;IAAA;;IACtB;AACJ;AACA;AACA;AACA;IACI,QAAC,WAAD;MAAa,QAAQ,MAArB;MAAA,UACKA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,GAAG,iBACjB,QAAC,WAAD;QAAA,UACKA,GAAG,CAACD,GAAJ,CAAQE,GAAG,iBACR,QAAC,MAAD;UAAQ,MAAM,EAAEA;QAAhB,GAA0BA,GAAG,CAACC,EAA9B;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EANsB;AAAA,CAAD,CAAzB;MAAMN,Q;AAiBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}