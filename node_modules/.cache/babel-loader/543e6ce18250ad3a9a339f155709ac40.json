{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaewh\\\\OneDrive\\\\Desktop\\\\Resume\\\\pathfinder\\\\src\\\\index.js\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoListView = observer(_c = _ref => {\n  let {\n    todoList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.todos.map(todo => /*#__PURE__*/_jsxDEV(TodoView, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), \"Tasks left: \", todoList.unfinishedTodoCount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n});\n_c2 = TodoListView;\nconst TodoView = observer(_c3 = _ref2 => {\n  let {\n    todo\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.finished,\n      onClick: () => todo.toggle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), todo.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n});\n_c4 = TodoView;\nconst store = new TodoList([new Todo(\"Get Coffee\"), new Todo(\"Write simpler code\")]);\nrender( /*#__PURE__*/_jsxDEV(TodoListView, {\n  todoList: store\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 8\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TodoListView$observer\");\n$RefreshReg$(_c2, \"TodoListView\");\n$RefreshReg$(_c3, \"TodoView$observer\");\n$RefreshReg$(_c4, \"TodoView\");","map":{"version":3,"names":["React","render","observer","TodoListView","todoList","todos","map","todo","id","unfinishedTodoCount","TodoView","finished","toggle","title","store","TodoList","Todo","document","getElementById"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport { observer } from \"mobx-react-lite\"\r\n\r\nconst TodoListView = observer(({ todoList }) => (\r\n    <div>\r\n        <ul>\r\n            {todoList.todos.map(todo => (\r\n                <TodoView todo={todo} key={todo.id} />\r\n            ))}\r\n        </ul>\r\n        Tasks left: {todoList.unfinishedTodoCount}\r\n    </div>\r\n))\r\n\r\nconst TodoView = observer(({ todo }) => (\r\n    <li>\r\n        <input type=\"checkbox\" checked={todo.finished} onClick={() => todo.toggle()} />\r\n        {todo.title}\r\n    </li>\r\n))\r\n\r\nconst store = new TodoList([new Todo(\"Get Coffee\"), new Todo(\"Write simpler code\")])\r\nrender(<TodoListView todoList={store} />, document.getElementById(\"root\"))"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,YAAY,GAAGD,QAAQ,MAAC;EAAA,IAAC;IAAEE;EAAF,CAAD;EAAA,oBAC1B;IAAA,wBACI;MAAA,UACKA,QAAQ,CAACC,KAAT,CAAeC,GAAf,CAAmBC,IAAI,iBACpB,QAAC,QAAD;QAAU,IAAI,EAAEA;MAAhB,GAA2BA,IAAI,CAACC,EAAhC;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,kBAMiBJ,QAAQ,CAACK,mBAN1B;EAAA;IAAA;IAAA;IAAA;EAAA,QAD0B;AAAA,CAAD,CAA7B;MAAMN,Y;AAWN,MAAMO,QAAQ,GAAGR,QAAQ,OAAC;EAAA,IAAC;IAAEK;EAAF,CAAD;EAAA,oBACtB;IAAA,wBACI;MAAO,IAAI,EAAC,UAAZ;MAAuB,OAAO,EAAEA,IAAI,CAACI,QAArC;MAA+C,OAAO,EAAE,MAAMJ,IAAI,CAACK,MAAL;IAA9D;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKL,IAAI,CAACM,KAFV;EAAA;IAAA;IAAA;IAAA;EAAA,QADsB;AAAA,CAAD,CAAzB;MAAMH,Q;AAON,MAAMI,KAAK,GAAG,IAAIC,QAAJ,CAAa,CAAC,IAAIC,IAAJ,CAAS,YAAT,CAAD,EAAyB,IAAIA,IAAJ,CAAS,oBAAT,CAAzB,CAAb,CAAd;AACAf,MAAM,eAAC,QAAC,YAAD;EAAc,QAAQ,EAAEa;AAAxB;EAAA;EAAA;EAAA;AAAA,QAAD,EAAoCG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApC,CAAN"},"metadata":{},"sourceType":"module"}