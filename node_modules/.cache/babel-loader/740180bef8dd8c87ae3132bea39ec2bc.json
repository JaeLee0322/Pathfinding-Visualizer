{"ast":null,"code":"export function randomMaze(grid) {\n  for (let row = 0; row < grid.length; row++) {\n    for (let col = 0; col < grid[row].length; col++) {\n      const node = grid[row][col];\n      node.type = getRandomInt(0, 3);\n    }\n  }\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport default randomMaze;","map":{"version":3,"names":["randomMaze","grid","row","length","col","node","type","getRandomInt","min","max","Math","ceil","floor","random"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/mazeAlgorithms/randomMaze.jsx"],"sourcesContent":["export function randomMaze(grid) {\r\n    for (let row = 0; row < grid.length; row++) {\r\n        for (let col = 0; col < grid[row].length; col++) {\r\n            const node = grid[row][col];\r\n            node.type = getRandomInt(0, 3);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default randomMaze"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0B;EAC7B,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,IAAI,CAACE,MAA7B,EAAqCD,GAAG,EAAxC,EAA4C;IACxC,KAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,IAAI,CAACC,GAAD,CAAJ,CAAUC,MAAlC,EAA0CC,GAAG,EAA7C,EAAiD;MAC7C,MAAMC,IAAI,GAAGJ,IAAI,CAACC,GAAD,CAAJ,CAAUE,GAAV,CAAb;MACAC,IAAI,CAACC,IAAL,GAAYC,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAxB;IACH;EACJ;AACJ;;AAED,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;EAC5BD,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;EACAC,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;EACA,OAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACH;;AAED,eAAeR,UAAf"},"metadata":{},"sourceType":"module"}