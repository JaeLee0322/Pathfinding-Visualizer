{"ast":null,"code":"import { action, computed, makeAutoObservable, observable } from 'mobx';\nimport { Node } from '../components/node';\nexport class GridStore {\n  constructor(width, height) {\n    this.squares = [];\n    makeAutoObservable(this, {\n      squares: observable,\n      drawingMode: observable,\n      nodeStartX: observable,\n      nodeStartY: observable,\n      nodeEndX: observable,\n      nodeEndY: observable,\n      initiateGrid: action,\n      changeGrid: action,\n      clearGrid: action,\n      setDrawingMode: action\n    });\n    this.setDrawingMode(1);\n    this.initiateGrid(width, height);\n  }\n\n  initiateGrid(width, height) {\n    let grid = [];\n\n    for (let i = 0; i < height; i++) {\n      grid.push([]);\n\n      for (let j = 0; j < width; j++) {\n        grid[i].push(new Node(j, i));\n      }\n    }\n\n    this.squares = grid;\n  }\n\n  initiateEndPoints(startx, starty, endx, endy) {//\n  }\n\n  changeGrid(x, y, mode) {\n    const target = document.getElementById('node-' + x + '-' + y);\n\n    switch (mode) {\n      case 0:\n        target.className = 'node';\n        break;\n\n      case 1:\n        target.className = 'node-wall';\n        break;\n\n      case 2:\n        target.className = 'node-start';\n        break;\n\n      case 3:\n        target.className = 'node-end';\n        break;\n    }\n  }\n\n  clearGrid() {\n    for (let row = 0; row < this.squares.length; row++) {\n      for (let col = 0; col < this.squares[row].length; col++) {\n        this.squares[row][col].resetType();\n        const target = document.getElementById('node-' + col + '-' + row);\n        target.className = 'node';\n      }\n    }\n  }\n\n  setDrawingMode(mode) {\n    this.drawingMode = mode;\n  }\n\n}\nexport default GridStore;","map":{"version":3,"names":["action","computed","makeAutoObservable","observable","Node","GridStore","constructor","width","height","squares","drawingMode","nodeStartX","nodeStartY","nodeEndX","nodeEndY","initiateGrid","changeGrid","clearGrid","setDrawingMode","grid","i","push","j","initiateEndPoints","startx","starty","endx","endy","x","y","mode","target","document","getElementById","className","row","length","col","resetType"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/stores/gridStore.jsx"],"sourcesContent":["import { action, computed, makeAutoObservable, observable } from 'mobx';\r\nimport { Node } from '../components/node';\r\n\r\nexport class GridStore {\r\n    squares = [];\r\n    drawingMode   // 0: empty, 1: wall, 2: start, 3: end\r\n    nodeStartX\r\n    nodeStartY\r\n    nodeEndX\r\n    nodeEndY\r\n\r\n    constructor(width, height) {\r\n        makeAutoObservable(this, {\r\n            squares: observable,\r\n            drawingMode: observable,\r\n            nodeStartX: observable,\r\n            nodeStartY: observable,\r\n            nodeEndX: observable,\r\n            nodeEndY: observable,\r\n            initiateGrid: action,\r\n            changeGrid: action,\r\n            clearGrid: action,\r\n            setDrawingMode: action\r\n        });\r\n        this.setDrawingMode(1);\r\n        this.initiateGrid(width, height);\r\n    }\r\n\r\n    initiateGrid(width, height) {\r\n        let grid = []\r\n        for (let i = 0; i < height; i++) {\r\n            grid.push([])\r\n            for (let j = 0; j < width; j++) {\r\n                grid[i].push(new Node(j, i));\r\n            }\r\n        }\r\n        this.squares = grid;\r\n    }\r\n\r\n    initiateEndPoints(startx, starty, endx, endy) {\r\n        //\r\n    }\r\n\r\n    changeGrid(x, y, mode) {\r\n        const target = document.getElementById('node-' + x + '-' + y);\r\n        switch (mode) {\r\n            case 0:\r\n                target.className = 'node';\r\n                break;\r\n            case 1:\r\n                target.className = 'node-wall';\r\n                break;\r\n            case 2:\r\n                target.className = 'node-start';\r\n                break;\r\n            case 3:\r\n                target.className = 'node-end';\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearGrid() {\r\n        for (let row = 0; row < this.squares.length; row++) {\r\n            for (let col = 0; col < this.squares[row].length; col++) {\r\n                this.squares[row][col].resetType();\r\n                const target = document.getElementById('node-' + col + '-' + row);\r\n                target.className = 'node';\r\n            }\r\n        }\r\n    }\r\n\r\n    setDrawingMode(mode) {\r\n        this.drawingMode = mode;\r\n    }\r\n}\r\nexport default GridStore"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,kBAA3B,EAA+CC,UAA/C,QAAiE,MAAjE;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,OAAO,MAAMC,SAAN,CAAgB;EAQnBC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;IAAA,KAP3BC,OAO2B,GAPjB,EAOiB;IACvBP,kBAAkB,CAAC,IAAD,EAAO;MACrBO,OAAO,EAAEN,UADY;MAErBO,WAAW,EAAEP,UAFQ;MAGrBQ,UAAU,EAAER,UAHS;MAIrBS,UAAU,EAAET,UAJS;MAKrBU,QAAQ,EAAEV,UALW;MAMrBW,QAAQ,EAAEX,UANW;MAOrBY,YAAY,EAAEf,MAPO;MAQrBgB,UAAU,EAAEhB,MARS;MASrBiB,SAAS,EAAEjB,MATU;MAUrBkB,cAAc,EAAElB;IAVK,CAAP,CAAlB;IAYA,KAAKkB,cAAL,CAAoB,CAApB;IACA,KAAKH,YAAL,CAAkBR,KAAlB,EAAyBC,MAAzB;EACH;;EAEDO,YAAY,CAACR,KAAD,EAAQC,MAAR,EAAgB;IACxB,IAAIW,IAAI,GAAG,EAAX;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAApB,EAA4BY,CAAC,EAA7B,EAAiC;MAC7BD,IAAI,CAACE,IAAL,CAAU,EAAV;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,KAApB,EAA2Be,CAAC,EAA5B,EAAgC;QAC5BH,IAAI,CAACC,CAAD,CAAJ,CAAQC,IAAR,CAAa,IAAIjB,IAAJ,CAASkB,CAAT,EAAYF,CAAZ,CAAb;MACH;IACJ;;IACD,KAAKX,OAAL,GAAeU,IAAf;EACH;;EAEDI,iBAAiB,CAACC,MAAD,EAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B,CAC1C;EACH;;EAEDX,UAAU,CAACY,CAAD,EAAIC,CAAJ,EAAOC,IAAP,EAAa;IACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAUL,CAAV,GAAc,GAAd,GAAoBC,CAA5C,CAAf;;IACA,QAAQC,IAAR;MACI,KAAK,CAAL;QACIC,MAAM,CAACG,SAAP,GAAmB,MAAnB;QACA;;MACJ,KAAK,CAAL;QACIH,MAAM,CAACG,SAAP,GAAmB,WAAnB;QACA;;MACJ,KAAK,CAAL;QACIH,MAAM,CAACG,SAAP,GAAmB,YAAnB;QACA;;MACJ,KAAK,CAAL;QACIH,MAAM,CAACG,SAAP,GAAmB,UAAnB;QACA;IAZR;EAcH;;EAEDjB,SAAS,GAAG;IACR,KAAK,IAAIkB,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAK1B,OAAL,CAAa2B,MAArC,EAA6CD,GAAG,EAAhD,EAAoD;MAChD,KAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAK5B,OAAL,CAAa0B,GAAb,EAAkBC,MAA1C,EAAkDC,GAAG,EAArD,EAAyD;QACrD,KAAK5B,OAAL,CAAa0B,GAAb,EAAkBE,GAAlB,EAAuBC,SAAvB;QACA,MAAMP,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAUI,GAAV,GAAgB,GAAhB,GAAsBF,GAA9C,CAAf;QACAJ,MAAM,CAACG,SAAP,GAAmB,MAAnB;MACH;IACJ;EACJ;;EAEDhB,cAAc,CAACY,IAAD,EAAO;IACjB,KAAKpB,WAAL,GAAmBoB,IAAnB;EACH;;AAtEkB;AAwEvB,eAAezB,SAAf"},"metadata":{},"sourceType":"module"}