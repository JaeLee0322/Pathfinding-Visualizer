{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport { Square } from './square';\n/*class TodoList {\r\n    todos = []\r\n    get unfinishedTodoCount() {\r\n        return this.todos.filter(todo => !todo.finished).length\r\n    }\r\n    constructor(todos) {\r\n        makeObservable(this, {\r\n            todos: observable,\r\n            unfinishedTodoCount: computed\r\n        })\r\n        this.todos = todos\r\n    }\r\n}*/\n\nexport class Grid {\n  testGrid() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    let n = 10;\n\n    for (let i = 0; i < size; i++) {\n      this.squares.push([]);\n\n      for (let j = 0; j < size; j++) {\n        this.squares[i].push(new Square(n));\n        n = n + 1;\n      }\n    }\n  }\n\n  constructor() {\n    this.squares = [...Array(20)].map(e => Array(20).fill(0));\n    makeAutoObservable(this); //this.initializeGrid();\n  }\n\n  get getGrid() {\n    return this.squares;\n  }\n\n  getSquare(x, y) {\n    return this.squares[x][y];\n  }\n\n}","map":{"version":3,"names":["makeAutoObservable","Square","Grid","testGrid","size","n","i","squares","push","j","constructor","Array","map","e","fill","getGrid","getSquare","x","y"],"sources":["C:/Users/jaewh/OneDrive/Desktop/Resume/pathfinder/src/models/grid.jsx"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport { Square } from './square'\r\n\r\n/*class TodoList {\r\n    todos = []\r\n    get unfinishedTodoCount() {\r\n        return this.todos.filter(todo => !todo.finished).length\r\n    }\r\n    constructor(todos) {\r\n        makeObservable(this, {\r\n            todos: observable,\r\n            unfinishedTodoCount: computed\r\n        })\r\n        this.todos = todos\r\n    }\r\n}*/\r\n\r\nexport class Grid {\r\n    squares = [...Array(20)].map(e => Array(20).fill(0));\r\n\r\n    testGrid(size = 10) {\r\n        let n = 10\r\n        for (let i = 0; i < size; i++) {\r\n            this.squares.push([])\r\n            for (let j = 0; j < size; j++) {\r\n                this.squares[i].push(new Square(n));\r\n                n = n + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n        //this.initializeGrid();\r\n    }\r\n\r\n    get getGrid() {\r\n        return this.squares;\r\n    }\r\n\r\n    getSquare(x, y) {\r\n        return this.squares[x][y];\r\n    }\r\n}"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAN,CAAW;EAGdC,QAAQ,GAAY;IAAA,IAAXC,IAAW,uEAAJ,EAAI;IAChB,IAAIC,CAAC,GAAG,EAAR;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAApB,EAA0BE,CAAC,EAA3B,EAA+B;MAC3B,KAAKC,OAAL,CAAaC,IAAb,CAAkB,EAAlB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAApB,EAA0BK,CAAC,EAA3B,EAA+B;QAC3B,KAAKF,OAAL,CAAaD,CAAb,EAAgBE,IAAhB,CAAqB,IAAIP,MAAJ,CAAWI,CAAX,CAArB;QACAA,CAAC,GAAGA,CAAC,GAAG,CAAR;MACH;IACJ;EACJ;;EAEDK,WAAW,GAAG;IAAA,KAbdH,OAac,GAbJ,CAAC,GAAGI,KAAK,CAAC,EAAD,CAAT,EAAeC,GAAf,CAAmBC,CAAC,IAAIF,KAAK,CAAC,EAAD,CAAL,CAAUG,IAAV,CAAe,CAAf,CAAxB,CAaI;IACVd,kBAAkB,CAAC,IAAD,CAAlB,CADU,CAEV;EACH;;EAEU,IAAPe,OAAO,GAAG;IACV,OAAO,KAAKR,OAAZ;EACH;;EAEDS,SAAS,CAACC,CAAD,EAAIC,CAAJ,EAAO;IACZ,OAAO,KAAKX,OAAL,CAAaU,CAAb,EAAgBC,CAAhB,CAAP;EACH;;AAzBa"},"metadata":{},"sourceType":"module"}